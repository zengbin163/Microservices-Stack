server:
   port: 7004
   host: 127.0.0.1
   public:
      host: public.server.com

spring:
   application:
      name: zull-gateway-service
   redis:
      host: 47.115.34.118
      port: 6379
      password: famiao@2020

logging:
   level:
      com.chihuo.zuul: debug

eureka:
   client:
      serviceUrl:
         defaultZone: http://eureka-server01.com:7001/eureka,http://eureka-server02.com:7002/eureka   #集群配置,如果有多个,用逗号分割,不要包含自己
   instance:
      hostname: ${spring.cloud.client.ip-address}
      prefer-ip-address: true      #以IP地址注册到服务中心
      instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@      #eureka显示的instanceId
      ip-address: ${server.public.host}      #公网ip，如果是服务内网调用不需要声明这个
      non-secure-port: ${server.port}      #公网端口，如果是服务内网调用不需要声明这个
      lease-expiration-duration-in-seconds: 15      #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
      lease-renewal-interval-in-seconds: 5      #服务刷新时间配置，每隔这个时间会主动心跳一次
   healthcheck:
      enabled: true # 启用健康检查,注意:需要引用spring boot actuator

info:
   app:
      name: @project.artifactId@
      encoding: @project.build.sourceEncoding@
   company:
      name: @project.description@
   build:
      artifactId: @project.artifactId@
      version: @project.version@

management:
   security:
      enabled: false # 默认为true，改为false以便可以看到routes

#构建路由地址
zuul:
   routes:   #配置路由
      api-uid:
         path: /uid/**
         service-id: uid-service
      api-kafka:
         path: /kafka/**
         service-id: kafka-notify-service
      api-food:
         path: /food/**
         service-id: food-consumer
   host:
      connect-timeout-millis: 3000
      socket-timeout-millis: 3000
   ignored-patterns: /demo2/**   #不路由demo2开头的任意请求
   ratelimit:   #配置限流
      enabled: true
      repository: redis   #对应存储类型(存储统计信息)
      policy-list:    #配置路由的策略
         api-uid:
          - limit: 2   #每秒允许多少个请求
            refresh-interval: 1   #刷新时间(单位秒)
            type:   #可选(限流方式)
             - url

ribbon:
   ReadTimeout: 60000
   ConnectTimeout: 3000

hystrix:
   command:
      default:
         execution:
            isolation:
               thread:
                  timeout-in-milliseconds: 60000